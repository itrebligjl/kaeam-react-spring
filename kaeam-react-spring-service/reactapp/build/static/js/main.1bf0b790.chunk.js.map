{"version":3,"sources":["logo.svg","ServerInfo.js","ProcessDefsInfo.js","ProcessInstancesInfo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ServerInfo","getServerData","fetch","headers","Accept","Content-Type","then","response","json","data","_this","setState","setInterval","this","haveData","state","result","undefined","react_default","a","createElement","class","className","name","id","version","location","capabilities","map","capability","Component","ProcessDefsInfo","getProcessDefsData","handleStartProcess","cid","pid","method","_this2","processes","scope","processdef","type","onClick","ProcessInstancesInfo","getProcessInstancesData","instances","processinst","processName","App","src","logo","alt","src_ServerInfo","src_ProcessDefsInfo","src_ProcessInstancesInfo","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bf0b790.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, {Component} from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass ServerInfo extends Component {\r\n\r\n    componentDidMount() {\r\n        setInterval(this.getServerData, 2000);\r\n    }\r\n\r\n    getServerData = () => {\r\n        fetch('/rest/server',\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState(data);\r\n                });\r\n    };\r\n\r\n    render() {\r\n        const haveData = this.state && this.state.result && this.state.result !== undefined && this.state.result[\"kie-server-info\"];\r\n        return (\r\n                <div class=\"card mb-4\">\r\n                    <div class=\"view overlay\" className=\"ReactTitleStyle4\">\r\n                        <center><strong>Server Info</strong></center>\r\n                    </div>\r\n                    <div class=\"card-body jbpm-card-body\">\r\n                        <dl class=\"row\">\r\n                            <dt class=\"col-sm-3\">Name</dt>\r\n                            {haveData ? (\r\n                                    <dd class=\"col-sm-9\">{this.state.result[\"kie-server-info\"].name}</dd>\r\n                            ) : (\r\n                                    <dd class=\"col-sm-9\"></dd>\r\n                            )}\r\n\r\n                            <dt class=\"col-sm-3\">Id</dt>\r\n                            {haveData ? (\r\n                                    <dd class=\"col-sm-9\">{this.state.result[\"kie-server-info\"].id}</dd>\r\n                            ) : (\r\n                                    <dd class=\"col-sm-9\"></dd>\r\n                            )}\r\n\r\n                            <dt class=\"col-sm-3\">Version</dt>\r\n                            {haveData ? (\r\n                                    <dd class=\"col-sm-9\">{this.state.result[\"kie-server-info\"].version}</dd>\r\n                            ) : (\r\n                                    <dd class=\"col-sm-9\"></dd>\r\n                            )}\r\n\r\n                            <dt class=\"col-sm-3\">Location</dt>\r\n                            {haveData ? (\r\n                                    <dd class=\"col-sm-9\">{this.state.result[\"kie-server-info\"].location}</dd>\r\n                            ) : (\r\n                                    <dd class=\"col-sm-9\"></dd>\r\n                            )}\r\n\r\n                            <dt class=\"col-sm-3\">Capabilities</dt>\r\n                            {haveData ? (\r\n                                    <dd class=\"col-sm-9\">\r\n                                        <ul>\r\n                                            {this.state.result[\"kie-server-info\"].capabilities.map(capability => (\r\n                                                    <li>{capability}</li>\r\n                                            ))\r\n                                            }\r\n                                        </ul>\r\n                                    </dd>\r\n                            ) : (\r\n                                    <dd class=\"col-sm-9\"></dd>\r\n                            )}\r\n                        </dl>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ServerInfo;","import React, {Component} from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass ProcessDefsInfo extends Component {\r\n\r\n    componentDidMount() {\r\n        setInterval(this.getProcessDefsData, 2000);\r\n    }\r\n\r\n    getProcessDefsData = () => {\r\n        fetch('/rest/server/containers/kaeam-react-spring-kjar/processes',\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState(data);\r\n                });\r\n    };\r\n\r\n    handleStartProcess = (cid, pid) => {\r\n        fetch('/rest/server/containers/' + cid + '/processes/' + pid + '/instances', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const haveData = this.state && this.state.processes;\r\n        return (\r\n                <div class=\"card mb-4\">\r\n                    <div class=\"view overlay\" className=\"ReactTitleStyle2\">\r\n                        <center><strong>Process Definitions</strong></center>\r\n                    </div>\r\n                    <div class=\"card-body jbpm-card-body\">\r\n                        {haveData ? (\r\n                                <table class=\"table mb-0\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {this.state.processes.map(processdef => (\r\n                                            <tr>\r\n                                                <td><small>{processdef[\"process-name\"]}</small></td>\r\n                                                <td><button type=\"button\" class=\"btn btn-primary\" onClick={() => this.handleStartProcess(processdef[\"container-id\"],processdef[\"process-id\"])}>Start</button></td>\r\n                                            </tr>\r\n                                    ))\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                        ) : (\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Id</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                        <th scope=\"col\">Version</th>\r\n                                        <th scope=\"col\">Action</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    </tbody>\r\n                                </table>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProcessDefsInfo;","import React, {Component} from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass ProcessInstancesInfo extends Component {\r\n\r\n    componentDidMount() {\r\n        setInterval(this.getProcessInstancesData, 2000);\r\n    }\r\n\r\n    getProcessInstancesData = () => {\r\n        fetch('/processinstances',\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        instances : data\r\n                    });\r\n                });\r\n    };\r\n\r\n    render() {\r\n        const haveData = this.state && this.state.instances;\r\n        return (\r\n                <div class=\"card mb-4\">\r\n                    <div class=\"view overlay\" className=\"ReactTitleStyle3\">\r\n                        <center><strong>Process Instances</strong></center>\r\n                    </div>\r\n                    <div class=\"card-body jbpm-card-body\">\r\n                        {haveData ? (\r\n                                <table class=\"table mb-0\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Id</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    {this.state.instances.map(processinst => (\r\n                                            <tr>\r\n                                                <td><small>{processinst.id}</small></td>\r\n                                                <td><small>{processinst.processName}</small></td>\r\n                                            </tr>\r\n                                    ))\r\n                                    }\r\n                                    </tbody>\r\n                                </table>\r\n                        ) : (\r\n                                <table class=\"table\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Id</th>\r\n                                        <th scope=\"col\">Name</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    </tbody>\r\n                                </table>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProcessInstancesInfo;","import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle.min\";\r\n\r\nimport React, {Component} from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\n\r\nimport ServerInfo from \"./ServerInfo\";\r\nimport ProcessDefsInfo from \"./ProcessDefsInfo\";\r\nimport ProcessInstancesInfo from \"./ProcessInstancesInfo\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"App\">\r\n                    <div class=\"jumbotron jumbotron-fluid\" className=\"ReactTitleStyle\">\r\n                        <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n                        <p>\r\n                            <strong><h3>Welcome to your jBPM React Business Application!</h3></strong>\r\n                        </p>\r\n                        <br/>\r\n                    </div>\r\n\r\n                    <div class=\"container-fluid\">\r\n                        <div class=\"row justify-content-center\">\r\n                            <div class=\"card-deck\">\r\n                                <ServerInfo/>\r\n                                <ProcessDefsInfo/>\r\n                                <ProcessInstancesInfo/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}